“议会回环”项目功能与运作机制详解
核心哲学：对抗“熵增”的结构化系统
本项目的根本目的，是解决传统在线讨论中普遍存在的“信息熵增”问题——即随着讨论的进行，信息量越来越大，但有效性越来越低，最终导致讨论失焦和崩溃。
“议会回环”通过一套环环相扣的结构化流程和AI辅助，强制性地引导讨论从“发散”走向“收敛”，实现“智慧的提纯”与“议题的进化”。
第一阶段：议题发现 (Lobby / 入口)
* 功能定位: 一个鼓励用户主动探索而非被动消费的议题入口。
* 运作机制:
   1. 非线性布局: 系统摒弃了传统的、按时间排序的帖子列表。取而代之的，是一个可视化的、非线性的界面，所有待讨论的议题以“思想节点 (Thought Nodes)”的形式呈现。
   2. 信息摘要: 当用户的光标悬浮在某个“思想节点”上时，系统会即时调取并展示该议题的核心摘要信息，包括：标题、当前参与人数、以及最重要的——讨论深度（即已进行的回环轮次）。
   3. 无算法干预: 节点的布局、大小或颜色可能基于其讨论深度或参与度，但绝不存在基于用户画像的“个性化推荐”。所有用户看到的入口都是一致的，确保了探索的公平性。
第二阶段：专注讨论 (Topic Space / 议题空间)
* 功能定位: 一个强制用户进行沉浸式、序列化阅读与高质量贡献的核心讨论界面。
* 运作机制:
   1. 讨论锚点: 进入议题空间后，“核心议题卡 (Topic Card)”会始终固定在屏幕的视觉中心，作为所有讨论的逻辑起点和参照物。
   2. 有限席位制: 围绕“核心议题卡”，系统会生成一个“评论回环 (Comment Loop)”。此回环拥有一个硬性规则：固定设有10个评论卡片槽位。这个“有限席位”的设计，极大地提升了单条评论的价值，从机制上抑制了低质量的“灌水”行为。
   3. 卡牌式/分页式交互: 用户无法通过快速滚动来浏览评论。系统强制用户通过左右滑动或点按的方式，像翻阅卡牌一样，按顺序、逐一阅读这10条评论。这种交互模式，确保了后发言者是在充分理解前序观点的前提下进行回应的。
   4. 发言资格: 只要10个槽位未满，所有用户均可看到清晰的“发表评论”入口。
第三阶段：智慧提纯 (Wisdom Distillation)
* 功能定位: 系统的核心自动化流程，负责将一轮发散的讨论，客观地收敛为一个更精炼的摘要。
* 运作机制:
   1. 自动触发: 当第10张评论卡片被成功发布后，该“评论回环”的数据库状态会立刻被标记为“锁定 (Locked)”，并自动触发一个异步任务，进入“智慧提纯”流程。
   2. 数据打包: 系统后端会将该回环内10张评论卡片的全部文本内容，整合成一个结构化的数据包。
   3. 调用“LLM书记官”: 该数据包会被作为输入，发送给一个经过特殊Prompt调优的LLM API。该Prompt的核心指令是要求LLM执行以下任务：
      * 识别核心共识: 总结这10条评论中，大部分人都同意或提及的观点。
      * 识别主要分歧: 明确指出存在的、无法调和的关键对立观点。
      * 识别新生问题: 提取出讨论中被提出的、有价值的、可供下一轮讨论的新问题。
      * 保持绝对中立: LLM被严格禁止在总结中加入任何自己的观点或进行价值判断。
   4. 生成“总结卡片”: LLM返回的结构化文本，会被系统自动封装成一张全新的、在数据库中拥有不同类型标识的“总结卡片 (Summary Card)”。
第四阶段：议题进化 (Discussion Evolution)
* 功能定位: 实现讨论的层层递进与结构化存档，形成可追溯的“智慧脉络”。
* 运作机制:
   1. 新循环的开启: “总结卡片”一旦生成，系统会自动将其设定为一个新的“子议题”，并以它为“锚点”，开启一个全新的、拥有10个空槽位的“评论回环”。
   2. 树状结构生成: 在数据库层面，这张“总结卡片”会与最初的“核心议题卡”建立父子关系。这个过程可以无限重复，形成一个清晰的、可无限向下追溯的树状数据结构。
   3. 可视化呈现: 在前端界面，用户将能看到一个清晰的、可视化的“智慧之树”。用户可以自由点击树上的任何一个节点（无论是最初的核心议た题，还是第N轮的总结卡片），来回顾该阶段的10条原始评论，从而完整地理解整个讨论是如何从一个宽泛的话题，一步步聚焦、深化，并最终演变至今的。